# -*- coding: utf-8 -*-
"""Assignment-12.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/125fbZK5ktiMK7WnNCq_h3Wkw3xScUtZu
"""

from cvxpy import *
import numpy as np
import matplotlib.pyplot as plt

#Generate line points
def line_gen(A,B):
  len =10
  dim = A.shape[0]
  x_AB = np.zeros((dim,len))
  lam_1 = np.linspace(0,1,len)
  for i in range(len):
    temp1 = A + lam_1[i]*(B-A)
    x_AB[:,i]= temp1.T
  return x_AB

#Obtaining minimum value 
A = np.array([[1,1],[1,0],[0,1],[-1,-1]]).T
b = np.array([100,60,50,-60]).reshape((4,-1 ))
c = np.array([2.5,1.5])
d = np.array([410])

x = Variable((2,1),nonneg = True)

f = c@x+d
obj = Minimize(f)
# Constraints
constraints = [A.T@x <= b]
Problem(obj, constraints).solve()

print("Minimum_value: " ,(f.value))
print("attained at: ",(x.value))

#Graphical solution
#Generating and plotting line x+y = 100
A=np.array([100,0])
B=np.array([0,100])
AB=line_gen(A,B)
plt.plot(AB[0,:],AB[1,:],label='x+y=100')

#Generating and plotting line x+y = 60
C=np.array([80,-20])
D=np.array([-20,80])
CD=line_gen(C,D)
plt.plot(CD[0,:],CD[1,:],label='x+y=60')

#Generating and plotting line x=60
E=np.array([60,-20])
F=np.array([60,100])
EF=line_gen(E,F)
plt.plot(EF[0,:],EF[1,:],label='x=60')

#Generating and plotting line y=50
E=np.array([-20,50])
F=np.array([120,50])
EF=line_gen(E,F)
plt.plot(EF[0,:],EF[1,:],label='y=50')

#Shading Required Region
x1=[10,50,60,60]
y1=[50,50,40,0]
plt.fill(x1,y1,color="green",alpha = 0.3)

#Labelling points
plt.plot(10,50,'o',color='r')
plt.text(10.2,52,'A(10,50)')
plt.plot(50,50,'o',color='r')
plt.text(50.3,51,'B(50,50)')
plt.plot(60,40,'o',color='r')
plt.text(62,41,'C(60,40)')
plt.plot(60,0,'o',color='r')
plt.text(60.2,0.2,'D(60,0)')

plt.xlabel('x')
plt.ylabel('y')
plt.legend(loc='best')
plt.grid() # minor
plt.axis('equal')